# load zgenom
source "${HOME}/.zgenom/zgenom.zsh"

zgenom autoupdate

# if the init script doesn't exist
if ! zgenom saved; then

    # Enable autocompletion based on history
    zgenom load zsh-users/zsh-autosuggestions

    # Extra completions
    zgenom load zsh-users/zsh-completions

    # Enable shell syntax highlighting
    zgenom load zsh-users/zsh-syntax-highlighting

    zgenom load Aloxaf/fzf-tab

    # save all to init script
    zgenom save

    # Compile your zsh files
    zgenom compile "$HOME/.zshrc"
fi

# Check for plugin and zgenom updates every 7 days
# This does not increase the startup time.
zgenom autoupdate

# Set some history options
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify
setopt INC_APPEND_HISTORY
unsetopt HIST_BEEP

# Share your history across all your terminal windows
setopt share_history

# Keep a ton of history
export HISTSIZE=100000
export SAVEHIST=100000
HISTFILE=~/.zsh_history

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Add some completions settings
setopt ALWAYS_TO_END    # Move cursor to the end of a completed word.
setopt AUTO_LIST        # Automatically list choices on ambiguous completion.
setopt AUTO_MENU        # Show completion menu on a successive tab press.
setopt AUTO_PARAM_SLASH # If completed parameter is a directory, add a trailing slash.
setopt COMPLETE_IN_WORD # Complete from both ends of a word.
unsetopt MENU_COMPLETE  # Do not autoselect the first completion entry.

# Miscellaneous settings
setopt INTERACTIVE_COMMENTS # Enable comments in interactive shell.
setopt extended_glob        # Enable more powerful glob features

# Speed up autocomplete, force prefix mapping
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'

PATH=~/.local/bin:$PATH         # User binaries
PATH=$PATH:~/.cargo/bin         # Rust binaries
PATH=$PATH:~/.npm-global/bin    # NPM binaries

VISUAL='code --wait --new-window'
EDITOR='vim'

export VISUAL EDITOR

source ~/.zsh_aliases
source ~/.zsh_extra

# Add completion for SSH known hosts
zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'

# Add yazi shell wrapper allowing cd functionality
function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp" $(pwd)
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# Add `s` alias for shellmark allowing quickly
# adding and fuzzy searching bookmarks
if type shellmark &>/dev/null; then
    eval "$(shellmark --out posix plug)"
fi

# Adding starship prompt for easy and customized shell prompt
eval "$(starship init zsh)"

# Adding atuin for fuzzy searching command history
eval "$(atuin init zsh)"

# zoxide
eval "$(zoxide init zsh)"
